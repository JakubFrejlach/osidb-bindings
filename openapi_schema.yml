openapi: 3.0.3
info:
  title: FlawDB API
  version: 1.0.0
  description: REST API autogenerated docs for the FlawDB and its components
paths:
  /bzimport/api/v1/jobs:
    get:
      operationId: bzimport_api_v1_jobs_list
      description: HTTP get /jobs
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - bzimport
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedJobList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedJobList'
          description: ''
    post:
      operationId: bzimport_api_v1_jobs_create
      description: HTTP POST /jobs
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - bzimport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
            application/xml:
              schema:
                $ref: '#/components/schemas/Job'
            text/csv:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /bzimport/api/v1/jobs/{id}:
    get:
      operationId: bzimport_api_v1_jobs_retrieve
      description: HTTP GET /jobs/{pk}
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - bzimport
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: bzimport_api_v1_jobs_destroy
      description: HTTP DELETE /jobs/{pk}
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - bzimport
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /bzimport/api/v1/status:
    get:
      operationId: bzimport_api_v1_status_retrieve
      description: HTTP get /status
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - bzimport
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /bzimport/api/v1/sync:
    post:
      operationId: bzimport_api_v1_sync_create
      description: HTTP POST /jobs
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - bzimport
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /bzimport/healthy:
    get:
      operationId: bzimport_healthy_retrieve
      description: unauthenticated view providing healthcheck on bzimport service
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - bzimport
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /flawdb/api/v1/flaws:
    get:
      operationId: flawdb_api_v1_flaws_list
      description: HTTP get /flaws
      parameters:
      - in: query
        name: bz_id
        schema:
          type: number
      - in: query
        name: changed_after
        schema:
          type: string
          format: date-time
      - in: query
        name: changed_before
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: cve_id
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: cvss2
        schema:
          type: string
      - in: query
        name: cvss2_score
        schema:
          type: number
          format: float
      - in: query
        name: cvss3
        schema:
          type: string
      - in: query
        name: cvss3_score
        schema:
          type: number
          format: float
      - in: query
        name: cwe_id
        schema:
          type: string
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: embargoed
        schema:
          type: boolean
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: Exclude specified fields from the response. Multiple values may
          be separated by commas.
      - in: query
        name: flaw_meta_type
        schema:
          type: array
          items:
            type: string
        description: 'Include flaw metas with specified type only, multiple values
          may be separated by commas. '
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - in: query
        name: impact
        schema:
          type: string
          nullable: true
          enum:
          - CRITICAL
          - IMPORTANT
          - LOW
          - MODERATE
          - NONE
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: Include only specified fields in the response. Multiple values
          may be separated by commas.
      - in: query
        name: include_meta_attr
        schema:
          type: array
          items:
            type: string
        description: 'Specify which keys from meta_attr field should be retrieved,
          multiple values may be separated by commas. Use wildcard `include_meta_attr=*`
          for retrieving all the keys. Omit this parameter to not include meta_attr
          field at all. '
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: mitigated_by
        schema:
          type: string
          nullable: true
          enum:
          - FORTIFY
          - GRSEC
          - SELINUX
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: reported_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: resolution
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: source
        schema:
          type: string
          nullable: true
          enum:
          - ADOBE
          - APPLE
          - ASF
          - BIND
          - BK
          - BUGTRAQ
          - BUGZILLA
          - CERT
          - CERTIFI
          - CORELABS
          - CUSTOMER
          - CVE
          - DAILYDAVE
          - DEBIAN
          - DISTROS
          - FEDORA
          - FETCHMAIL
          - FREEDESKTOP
          - FREERADIUS
          - FSIRT
          - FULLDISCLOSURE
          - GAIM
          - GENTOBZ
          - GENTOO
          - GIT
          - GNOME
          - GNUPG
          - GOOGLE
          - HP
          - HW_VENDOR
          - IDEFENSE
          - INDIVIDUAL
          - INTERNET
          - ISC
          - ISEC
          - JBOSS
          - JPCERT
          - KERNALBUGZILLA
          - KERNELSEC
          - LKML
          - LWN
          - MACROMEDIA
          - MAGEIA
          - MAILINGLIST
          - MILWORM
          - MIT
          - MITRE
          - MOZILLA
          - MUTTDEV
          - NETDEV
          - NISCC
          - NOVALUE
          - OCERT
          - OPENOFFICE
          - OPENSSL
          - OPENSUSE
          - ORACLE
          - OSS
          - OSSSECURITY
          - PHP
          - PIDGIN
          - POSTGRESQL
          - PRESS
          - REAL
          - REDHAT
          - RESEARCHER
          - RT
          - SAMBA
          - SECALERT
          - SECUNIA
          - SECURITYFOCUS
          - SKO
          - SQUID
          - SQUIRRELMAIL
          - SUN
          - SUSE
          - SUSOLVE
          - TWITTER
          - UBUNTU
          - UPSTREAM
          - VENDORSEC
          - VULNWATCH
          - WIRESHARK
          - XCHAT
          - XEN
          - XPDF
      - in: query
        name: state
        schema:
          type: string
          nullable: true
          enum:
          - ASSIGNED
          - CLOSED
          - DRAFT
          - NEW
          - OPEN
          - STUB
          - VERIFIED
      - in: query
        name: statement
        schema:
          type: string
      - in: query
        name: summary
        schema:
          type: string
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: tracker_ids
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: type
        schema:
          type: string
          enum:
          - VULNERABILITY
          - WEAKNESS
      - in: query
        name: unembargo_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - flawdb
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlawListList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedFlawListList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedFlawListList'
          description: ''
    post:
      operationId: flawdb_api_v1_flaws_create
      description: HTTP POST /flaws
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - flawdb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawList'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlawList'
            application/xml:
              schema:
                $ref: '#/components/schemas/FlawList'
            text/csv:
              schema:
                $ref: '#/components/schemas/FlawList'
          description: ''
  /flawdb/api/v1/flaws/{id}:
    get:
      operationId: flawdb_api_v1_flaws_retrieve
      description: HTTP GET /flaws/{pk}
      parameters:
      - in: query
        name: flaw_meta_type
        schema:
          type: array
          items:
            type: string
        description: 'Include flaw metas with specified type only, multiple values
          may be separated by commas. '
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: include_meta_attr
        schema:
          type: array
          items:
            type: string
        description: 'Specify which keys from meta_attr field should be retrieved,
          multiple values may be separated by commas. Use wildcard `include_meta_attr=*`
          for retrieving all the keys. Omit this parameter to not include meta_attr
          field at all. '
      tags:
      - flawdb
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flaw'
            application/xml:
              schema:
                $ref: '#/components/schemas/Flaw'
            text/csv:
              schema:
                $ref: '#/components/schemas/Flaw'
          description: ''
    delete:
      operationId: flawdb_api_v1_flaws_destroy
      description: HTTP DELETE /flaws/{pk}
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - flawdb
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /flawdb/api/v1/manifest:
    get:
      operationId: flawdb_api_v1_manifest_retrieve
      description: HTTP get /manifest
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - flawdb
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /flawdb/api/v1/schema/:
    get:
      operationId: flawdb_api_v1_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - flawdb
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /flawdb/api/v1/status:
    get:
      operationId: flawdb_api_v1_status_retrieve
      description: HTTP get /status
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - flawdb
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  dt:
                    type: string
                    format: date-time
                  flawdb_service:
                    type: object
                  flawdb_data:
                    type: object
                    properties:
                      flaw_count:
                        type: integer
            application/xml:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  dt:
                    type: string
                    format: date-time
                  flawdb_service:
                    type: object
                  flawdb_data:
                    type: object
                    properties:
                      flaw_count:
                        type: integer
            text/csv:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  dt:
                    type: string
                    format: date-time
                  flawdb_service:
                    type: object
                  flawdb_data:
                    type: object
                    properties:
                      flaw_count:
                        type: integer
          description: ''
  /flawdb/auth/get_auth_token/:
    post:
      operationId: flawdb_auth_get_auth_token_create
      tags:
      - flawdb
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /flawdb/healthy:
    get:
      operationId: flawdb_healthy_retrieve
      description: unauthenticated view providing healthcheck on flawdb service
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - flawdb
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /jiraffe/api/v1/jobs:
    get:
      operationId: jiraffe_api_v1_jobs_list
      description: Fetch list of JiraffeJobs
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - jiraffe
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJiraffeJobList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedJiraffeJobList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedJiraffeJobList'
          description: ''
    post:
      operationId: jiraffe_api_v1_jobs_create
      description: Create a JiraffeJob
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - jiraffe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraffeJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JiraffeJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JiraffeJob'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraffeJob'
            application/xml:
              schema:
                $ref: '#/components/schemas/JiraffeJob'
            text/csv:
              schema:
                $ref: '#/components/schemas/JiraffeJob'
          description: ''
  /jiraffe/api/v1/jobs/{id}:
    get:
      operationId: jiraffe_api_v1_jobs_retrieve
      description: Retrieve details for a specific job or delete it
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - jiraffe
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: jiraffe_api_v1_jobs_destroy
      description: Retrieve details for a specific job or delete it
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - jiraffe
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /jiraffe/api/v1/status:
    get:
      operationId: jiraffe_api_v1_status_retrieve
      description: Returns status for the Jiraffe service
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - jiraffe
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /jiraffe/api/v1/sync:
    post:
      operationId: jiraffe_api_v1_sync_create
      description: |-
        Sync affects from trackers that have been updated in the last interval

        For valid interval values, please see the following JIRA JQL documentation:
        https://support.atlassian.com/jira-software-cloud/docs/advanced-search-reference-jql-fields/#Advancedsearchingfieldsreference-UpdatedUpdatedDateupdatedDateUpdated
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - jiraffe
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /jiraffe/healthy:
    get:
      operationId: jiraffe_healthy_retrieve
      description: Health check on Jiraffe service
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - jiraffe
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /osim/:
    get:
      operationId: osim_retrieve
      description: index API endpoint listing available API endpoints
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - osim
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /osim/api/v1/workflows:
    get:
      operationId: osim_api_v1_workflows_retrieve
      description: workflow info API endpoint
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - osim
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /osim/api/v1/workflows/{id}:
    get:
      operationId: osim_api_v1_workflows_retrieve_2
      description: |-
        workflow classification API endpoint

        for flaw identified by UUID or CVE returns its workflow:state classification

        params:

            verbose - return also workflows with flaw classification
                      which represents the reasoning of the result
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: verbose
        schema:
          type: boolean
        description: Return also workflows with flaw classification which represents
          the reasoning of the result.
      tags:
      - osim
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /osim/api/v1/workflows/{id}/adjust:
    post:
      operationId: osim_api_v1_workflows_adjust_create
      description: |-
        workflow adjustion API endpoint

        adjust workflow classification of flaw identified by UUID or CVE
        and return its workflow:state classification (new if changed and old otherwise)

        adjust operation is idempotent so when the classification
        is already adjusted running it results in no operation
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osim
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /osim/healthy:
    get:
      operationId: osim_healthy_retrieve
      description: unauthenticated health check API endpoint
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
      tags:
      - osim
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Affect:
      type: object
      description: Affect serializer
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AffectTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        state:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AffectStateEnum'
          - $ref: '#/components/schemas/NullEnum'
        resolution:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ResolutionEnum'
          - $ref: '#/components/schemas/NullEnum'
        ps_module:
          type: string
          nullable: true
          maxLength: 100
        ps_component:
          type: string
          nullable: true
          maxLength: 100
        module_name:
          type: string
          nullable: true
          maxLength: 100
        module_stream:
          type: string
          nullable: true
          maxLength: 100
        component:
          type: string
          nullable: true
          maxLength: 100
        statement:
          type: string
          nullable: true
          maxLength: 100
        impact:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ImpactEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        cvss2:
          type: string
          nullable: true
          maxLength: 100
        cvss2_score:
          type: number
          format: float
          nullable: true
        cvss3:
          type: string
          nullable: true
          maxLength: 100
        cvss3_score:
          type: number
          format: float
          nullable: true
        trackers:
          type: array
          items:
            $ref: '#/components/schemas/Tracker'
          readOnly: true
      required:
      - trackers
      - uuid
    AffectStateEnum:
      enum:
      - NONE
      - NEW
      - AFFECTED
      - NOT_AFFECTED
      - WONT_FIX
      - OOSS
      - DEFERRED
      type: string
    AffectTypeEnum:
      enum:
      - DEFAULT
      type: string
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    BlankEnum:
      enum:
      - ''
    CVEv5PackageVersions:
      type: object
      description: CVEv5 package versions serializer
      properties:
        package:
          type: string
          maxLength: 2058
        versions:
          type: array
          items:
            $ref: '#/components/schemas/CVEv5Versions'
      required:
      - package
      - versions
    CVEv5Versions:
      type: object
      description: CVEv5 Package Version Serializer
      properties:
        version:
          type: string
          maxLength: 1024
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - status
      - version
    Comment:
      type: object
      description: FlawComment serializer
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CommentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        external_system_id:
          type: string
          nullable: true
          maxLength: 100
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        created_dt:
          type: string
          format: date-time
          nullable: true
        meta_attr:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
      required:
      - uuid
    CommentTypeEnum:
      enum:
      - BUGZILLA
      type: string
    Flaw:
      type: object
      description: serialize flaw model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_dt:
          type: string
          format: date-time
          nullable: true
        updated_dt:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/Type824Enum'
        cve_id:
          type: string
          nullable: true
          maxLength: 500
        state:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/State574Enum'
          - $ref: '#/components/schemas/NullEnum'
        resolution:
          type: string
          nullable: true
          maxLength: 100
        impact:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ImpactEnum'
          - $ref: '#/components/schemas/NullEnum'
        title:
          type: string
        description:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        statement:
          type: string
          nullable: true
        cwe_id:
          type: string
          nullable: true
          maxLength: 50
        embargoed:
          type: boolean
          nullable: true
        unembargo_dt:
          type: string
          format: date-time
          nullable: true
        source:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SourceEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        reported_dt:
          type: string
          format: date-time
          nullable: true
        mitigated_by:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MitigatedByEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        cvss2:
          type: string
          nullable: true
          maxLength: 100
        cvss2_score:
          type: number
          format: float
          nullable: true
        cvss3:
          type: string
          nullable: true
          maxLength: 100
        cvss3_score:
          type: number
          format: float
          nullable: true
        is_csaw:
          type: boolean
          nullable: true
        affects:
          type: array
          items:
            $ref: '#/components/schemas/Affect'
          readOnly: true
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          readOnly: true
        meta_attr:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
        package_versions:
          type: array
          items:
            $ref: '#/components/schemas/CVEv5PackageVersions'
          readOnly: true
        classification:
          type: object
          properties:
            workflow:
              type: string
            state:
              type: string
              enum:
              - DRAFT
              - NEW
              - ANALYSIS
              - REVIEW
              - FIX
              - DONE
          readOnly: true
      required:
      - affects
      - classification
      - comments
      - cve_id
      - meta
      - package_versions
      - title
      - type
      - updated_dt
      - uuid
    FlawList:
      type: object
      description: serialize flaw list model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_dt:
          type: string
          format: date-time
          nullable: true
        updated_dt:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/Type824Enum'
        cve_id:
          type: string
          nullable: true
          maxLength: 500
        state:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/State574Enum'
          - $ref: '#/components/schemas/NullEnum'
        resolution:
          type: string
          nullable: true
          maxLength: 100
        impact:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ImpactEnum'
          - $ref: '#/components/schemas/NullEnum'
        title:
          type: string
        description:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        statement:
          type: string
          nullable: true
        trackers:
          type: array
          items:
            type: string
          readOnly: true
        cwe_id:
          type: string
          nullable: true
          maxLength: 50
        embargoed:
          type: boolean
          nullable: true
        unembargo_dt:
          type: string
          format: date-time
          nullable: true
        source:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SourceEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        reported_dt:
          type: string
          format: date-time
          nullable: true
        mitigated_by:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MitigatedByEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        cvss2:
          type: string
          nullable: true
          maxLength: 100
        cvss2_score:
          type: number
          format: float
          nullable: true
        cvss3:
          type: string
          nullable: true
          maxLength: 100
        cvss3_score:
          type: number
          format: float
          nullable: true
        is_csaw:
          type: boolean
          nullable: true
        affects:
          type: array
          items:
            $ref: '#/components/schemas/Affect'
          readOnly: true
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          readOnly: true
        meta_attr:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
        package_versions:
          type: array
          items:
            type: string
            format: uuid
        classification:
          type: object
          properties:
            workflow:
              type: string
            state:
              type: string
              enum:
              - DRAFT
              - NEW
              - ANALYSIS
              - REVIEW
              - FIX
              - DONE
          readOnly: true
      required:
      - affects
      - classification
      - comments
      - cve_id
      - meta
      - package_versions
      - title
      - trackers
      - type
      - updated_dt
      - uuid
    ImpactEnum:
      enum:
      - NONE
      - LOW
      - MODERATE
      - IMPORTANT
      - CRITICAL
      type: string
    JiraffeJob:
      type: object
      description: Serialize JiraffeJob into JSON
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        state:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/State7f6Enum'
          - $ref: '#/components/schemas/NullEnum'
        comment:
          type: string
          nullable: true
          maxLength: 255
        created_dt:
          type: string
          format: date-time
          nullable: true
        affect_uuids:
          type: array
          items:
            type: string
            nullable: true
            maxLength: 255
        dry_run:
          type: boolean
        update:
          type: boolean
        affect_count:
          type: string
          readOnly: true
      required:
      - affect_count
      - affect_uuids
      - uuid
    Job:
      type: object
      description: serialize job json
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        state:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/State7f6Enum'
          - $ref: '#/components/schemas/NullEnum'
        comment:
          type: string
          nullable: true
          maxLength: 255
        created_dt:
          type: string
          format: date-time
          nullable: true
        bz_ids:
          type: array
          items:
            type: string
            maxLength: 255
        dry_run:
          type: boolean
        update:
          type: boolean
        bz_count:
          type: string
          readOnly: true
        cve_count:
          type: string
          readOnly: true
      required:
      - bz_count
      - cve_count
      - uuid
    Meta:
      type: object
      description: FlawMeta serializer
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MetaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        created_dt:
          type: string
          format: date-time
          nullable: true
        meta_attr:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
      required:
      - uuid
    MetaTypeEnum:
      enum:
      - ERRATA
      - REFERENCE
      - ACKNOWLEDGEMENT
      - EXPLOIT
      - CSAW
      - CSAW_LITE
      - REQUIRES_DOC_TEXT
      - NIST_CVSS_VALIDATION
      - NEED_INFO
      - CHECKLIST
      type: string
    MitigatedByEnum:
      enum:
      - SELINUX
      - FORTIFY
      - GRSEC
      type: string
    NullEnum:
      enum:
      - null
    PaginatedFlawListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlawList'
    PaginatedJiraffeJobList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/JiraffeJob'
    PaginatedJobList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Job'
    ResolutionEnum:
      enum:
      - NONE
      - FIX
      - DEFER
      - WONTFIX
      - OOSS
      - DELEGATED
      - WONTREPORT
      type: string
    SourceEnum:
      enum:
      - ADOBE
      - APPLE
      - ASF
      - BIND
      - BK
      - BUGTRAQ
      - BUGZILLA
      - CERT
      - CERTIFI
      - CORELABS
      - CUSTOMER
      - CVE
      - DAILYDAVE
      - DEBIAN
      - DISTROS
      - FEDORA
      - FETCHMAIL
      - FREEDESKTOP
      - FREERADIUS
      - FSIRT
      - FULLDISCLOSURE
      - GAIM
      - GENTOO
      - GENTOBZ
      - GIT
      - GNOME
      - GNUPG
      - GOOGLE
      - HP
      - HW_VENDOR
      - IDEFENSE
      - INDIVIDUAL
      - INTERNET
      - ISC
      - ISEC
      - JBOSS
      - JPCERT
      - KERNALBUGZILLA
      - KERNELSEC
      - LKML
      - LWN
      - MACROMEDIA
      - MAGEIA
      - MAILINGLIST
      - MILWORM
      - MIT
      - MITRE
      - MOZILLA
      - MUTTDEV
      - NETDEV
      - NISCC
      - NOVALUE
      - OCERT
      - OPENOFFICE
      - OPENSSL
      - OPENSUSE
      - ORACLE
      - OSS
      - OSSSECURITY
      - PHP
      - PIDGIN
      - POSTGRESQL
      - PRESS
      - REAL
      - REDHAT
      - RESEARCHER
      - RT
      - SAMBA
      - SECALERT
      - SECUNIA
      - SECURITYFOCUS
      - SKO
      - SQUID
      - SQUIRRELMAIL
      - SUN
      - SUSOLVE
      - SUSE
      - TWITTER
      - UBUNTU
      - UPSTREAM
      - VENDORSEC
      - VULNWATCH
      - WIRESHARK
      - XCHAT
      - XEN
      - XPDF
      type: string
    State574Enum:
      enum:
      - STUB
      - DRAFT
      - NEW
      - ASSIGNED
      - OPEN
      - CLOSED
      - VERIFIED
      type: string
    State7f6Enum:
      enum:
      - PROCESSING
      - SUCCESS
      - FAILURE
      type: string
    StatusEnum:
      enum:
      - AFFECTED
      - UNAFFECTED
      - UNKNOWN
      type: string
    Tracker:
      type: object
      description: Tracker serializer
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TrackerTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        external_system_id:
          type: string
          nullable: true
          maxLength: 100
      required:
      - uuid
    TrackerTypeEnum:
      enum:
      - JIRA
      - BUGZILLA
      type: string
    Type824Enum:
      enum:
      - VULNERABILITY
      - WEAKNESS
      type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
